name: Data Processing and Kaggle Upload Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "33 18 * * *"

env:
  PYTHON_VERSION: "3.10"

permissions:
  contents: read

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest

          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --select=E,F --show-source --statistics
          # Exit on syntax errors and undefined names
          exit 0  # Treats all errors as warnings (consider a stricter exit code)


      - name: Lint another time with flake8
        run: |
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        if: false
        run: |
          pytest

  download-data:
    runs-on: ubuntu-latest
    needs: [ lint-and-test ]  # Only run after successful lint and test

    steps:
      - uses: actions/checkout@v3

      - name: Login to Kaggle
        uses: osbm/kaggle-login@v2.3
        with:
          KAGGLE_USERNAME: ${{ github.repository_owner }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

      - name: Download data (replace with your Kaggle dataset download command)
        run: |
          mkdir -p /tmp/out
          cd /tmp/out
          kaggle datasets download -w --unzip --force ${{ github.repository }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: downloaded-data
          path: /tmp/out/
          retention-days: 90
  run:

    runs-on: ubuntu-latest
    needs: [ download-data ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Login to Kaggle
        uses: osbm/kaggle-login@v2.3
        with:
          KAGGLE_USERNAME: ${{ github.repository_owner }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
      
      
      - name: mkdir tmp
        run: |
           mkdir -p /tmp/out

      - uses: actions/download-artifact@v3
        with:
          name: downloaded-data
          path: /tmp/out/

      - name: Display structure of downloaded files
        run: ls -R /tmp/out

      - name: Run app
        run: |
          script_path="$PWD/main.py"
          ln -s "$PWD/symbols.txt" /tmp/out/symbols.txt
          pushd /tmp/out
          ls -lah
          python $script_path
          rm -rf symbols.txt
          popd

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: yahoodata
          path: /tmp/out/
          retention-days: 1

  upload_to_kaggle:
    runs-on: ubuntu-latest
    needs: [ run ]
    if: ${{ github.actor }} == ${{ github.repository_owner }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: yahoodata
      - name: Display structure of downloaded files
        run: ls -R
      - name: Upload datasets
        uses: jaimevalero/push-kaggle-dataset@v3
        env:
          KAGGLE_USERNAME: ${{ github.repository_owner }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

        with:
          title: "Yahoo Financial data"
          subtitle: "Yahoo Financial data"
          description: |
            ## This dataset contains minutely stock data price of various market in a csv file format

            This dataset was automatically uploaded from a GitHub Actions workflow 
            running in the ${{ github.repository }} repository. 

            Feel free to explore and use this data for your analysis!
          files: |
            *.csv.xz
          is_public: false

